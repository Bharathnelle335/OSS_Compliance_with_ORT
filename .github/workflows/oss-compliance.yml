name: ORT Scan Only (CLI Version)

on:
  workflow_dispatch:
    inputs:
      scan_type:
        description: 'Select scan input type'
        required: true
        default: 'upload-zip'
        type: choice
        options:
          - upload-zip
          - upload-tar
          - git

      git_url:
        description: 'Git repository URL (only required if scan_type is git)'
        required: false

jobs:
  ort-scan-only:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up Java 21 for ORT
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Download and Extract ORT CLI (v54.0.0)
        run: |
          curl -L --fail --retry 3 -o ort.zip https://github.com/oss-review-toolkit/ort/releases/download/54.0.0/ort-54.0.0.zip
          unzip ort.zip -d ort-cli
          chmod +x ort-cli/ort-54.0.0/bin/ort

      - name: Extract uploaded ZIP source
        if: ${{ github.event.inputs.scan_type == 'upload-zip' }}
        run: |
          mkdir -p uploaded-source
          unzip "*.zip" -d uploaded-source

      - name: Extract uploaded image TAR
        if: ${{ github.event.inputs.scan_type == 'upload-tar' }}
        run: |
          mkdir -p extracted-tar
          file=$(find . -maxdepth 1 -type f \( -iname "*.tar" -o -iname "*.tar.gz" -o -iname "*.tgz" \) | head -n 1)
          if [ -z "$file" ]; then
            echo "‚ùå No .tar or .tar.gz file found."
            exit 1
          fi
          tar -xf "$file" -C extracted-tar

      - name: Clone Git Repository to Scan
        if: ${{ github.event.inputs.scan_type == 'git' }}
        run: |
          git clone ${{ github.event.inputs.git_url }} repo-to-scan

      - name: Copy ORT config into expected path
        run: |
          mkdir -p /home/runner/.ort/config
          cp .ort/config/config.yml /home/runner/.ort/config/config.yml

      - name: Run ORT Analyze and Report (CLI)
        run: |
          if [ "${{ github.event.inputs.scan_type }}" == "upload-zip" ]; then scan_path="uploaded-source";
          elif [ "${{ github.event.inputs.scan_type }}" == "upload-tar" ]; then scan_path="extracted-tar";
          elif [ "${{ github.event.inputs.scan_type }}" == "git" ]; then scan_path="repo-to-scan"; fi

          mkdir -p ort-output

          # Allow scan to continue even if unresolved issues exist (non-fatal)
          ort-cli/ort-54.0.0/bin/ort analyze -i "$scan_path" -o ort-output/analyzer || true
          ort-cli/ort-54.0.0/bin/ort report -i ort-output/analyzer -o ort-output/report -f WebApp

      - name: Upload ORT Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ort-cli-results
          path: |
            ort-output/
